/* Trang luôn vừa 1 khung nhìn, không cuộn */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  background: #000;
  overflow: hidden; /* ngăn kéo xuống */
}

/* Canvas trái tim phủ toàn màn hình, nằm dưới các lớp chữ */
#pinkboard {
  position: absolute;
  inset: 0;          /* top/right/bottom/left: 0 */
  width: 100%;
  height: 100%;
  display: block;
  z-index: 1;
}

/* Chữ trung tâm (nếu cần), nằm trên canvas */
.text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
}
.text p {
  margin: 0;
  font-size: 48px;
  font-weight: 700;
  color: #ffd54f;
  text-align: center;
  text-shadow: 0 2px 6px rgba(0,0,0,.6);
}

/* Vòng chữ chạy tròn đặt ở dưới trái tim, vẫn trong cùng khung hình */
.circular-text {
  position: absolute;
  left: 50%;
  bottom: 3vh;              /* khoảng cách lên khỏi mép dưới */
  transform: translateX(-50%);
  width: 220px;             /* kích thước vòng chữ */
  height: 250px;
  z-index: 3;               /* trên canvas */
  pointer-events: none;     /* tránh bắt chuột */
}

/* SVG full khung .circular-text */
.circular-text svg {
  width: 100%;
  height: 100%;
  display: block;
}

/* Kiểu chữ trên đường tròn */
.circular-text text {
  font-size: 20px;
  font-weight: 800;
  letter-spacing: 2px;
  fill: #ffd54f;            /* vàng sáng */
  text-transform: uppercase;
}

/* Quay đều chữ */
.spin {
  animation: spin 12s linear infinite;
  transform-origin: 100px 100px; /* tâm viewBox (200x200) */
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to   { transform: rotate(360deg); }
}

/* overlay unmute */
#unmute-overlay {
  position: fixed;
  inset: 0;
  display: none;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  background: rgba(0,0,0,0.5);
  z-index: 9999;
}
#unmute-overlay button {
  padding: 14px 20px;
  font-size: 18px;
  border: none;
  border-radius: 8px;
  background: #fff;
  cursor: pointer;
}
#unmute-overlay .hint {
  color: #fff;
  margin-top: 8px;
  font-size: 14px;
}



/* ====== Cảnh Trung Thu hai bên ====== */
#mid-autumn-scene {
  position: absolute;
  inset: 0;
  z-index: 3;           /* trên canvas trái tim và dưới text trung tâm nếu cần */
  pointer-events: none; /* không chặn thao tác */
}

/* Lồng đèn treo (trái/phải) */
.lantern {
  position: absolute;
  top: 8vh;
  width: 90px;
  height: 120px;
  transform-origin: 50% -40px; /* treo từ sợi dây tưởng tượng phía trên */
  filter: drop-shadow(0 6px 12px rgba(255, 100, 0, 0.4));
  opacity: 0.95;
}
.lantern.left  { left: min(5vw, 60px); }
.lantern.right { right: min(5vw, 60px); }

.lantern::before {
  /* sợi dây treo */
  content: "";
  position: absolute;
  top: -70px;
  left: 50%;
  width: 2px;
  height: 70px;
  transform: translateX(-50%);
  background: linear-gradient(#ddd, #aaa);
  opacity: 0.9;
}

.lantern .cap {
  position: absolute;
  top: 0;
  left: 50%;
  width: 68%;
  height: 14px;
  transform: translateX(-50%);
  background: linear-gradient(180deg, #b71c1c, #7f0e0e);
  border-radius: 10px 10px 2px 2px;
}

.lantern .body {
  position: absolute;
  top: 12px;
  left: 50%;
  width: 100%;
  height: 88%;
  transform: translateX(-50%);
  background: radial-gradient(ellipse at 50% 45%, rgba(255,200,120,0.85), rgba(255,120,60,0.95) 55%, #d84315 100%);
  border-radius: 48% 48% 40% 40% / 38% 38% 50% 50%;
  outline: 2px solid rgba(120,0,0,0.35);
  box-shadow:
    inset 0 0 24px rgba(255,220,160,0.9),
    0 8px 16px rgba(0,0,0,0.35);
  overflow: hidden;
}

.lantern .body::after {
  /* các “gân” lồng đèn */
  content: "";
  position: absolute;
  inset: 0;
  background:
    repeating-linear-gradient(
      to bottom,
      rgba(255,255,255,0.15) 0 3px,
      rgba(255,255,255,0.02) 3px 9px
    );
  mix-blend-mode: screen;
}

.lantern .shine {
  position: absolute;
  top: 18%;
  left: 14%;
  width: 45%;
  height: 30%;
  background: radial-gradient(circle at 0% 0%, rgba(255,255,255,0.8), rgba(255,255,255,0) 70%);
  transform: rotate(-20deg);
}

.lantern .tassel {
  position: absolute;
  bottom: -16px;
  left: 50%;
  width: 16px;
  height: 30px;
  transform: translateX(-50%);
  background: linear-gradient(180deg, #ffb300, #ff6f00);
  border-radius: 0 0 10px 10px;
  box-shadow: 0 8px 12px rgba(255,120,0,0.35);
}
.lantern .tassel::after {
  /* sợi tua rua */
  content: "";
  position: absolute;
  bottom: -14px;
  left: 50%;
  width: 2px;
  height: 16px;
  transform: translateX(-50%);
  background: linear-gradient(#ffb300, #ff6f00);
}

/* Đung đưa */
.swing {
  animation: swing 3.8s ease-in-out infinite;
}
.lantern.right.swing { animation-duration: 4.6s; }
@keyframes swing {
  0%   { transform: rotate(-6deg); }
  50%  { transform: rotate(6deg); }
  100% { transform: rotate(-6deg); }
}

/* ====== Lồng đèn trời bay ở HAI mép màn hình ====== */
#sky-lanterns {
  position: absolute;
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  z-index: 2;
}

.sky-lantern {
  position: absolute;
  bottom: -120px;                    /* bắt đầu ngoài khung */
  width: 36px;
  height: 46px;
  border-radius: 10px 10px 14px 14px;
  background: radial-gradient(circle at 50% 20%, rgba(255,220,160,0.95), rgba(255,160,60,0.9) 60%, rgba(240,90,30,0.95) 100%);
  box-shadow:
    0 0 18px 6px rgba(255,160,50,0.35),
    inset 0 0 12px rgba(255,240,200,0.9);
  opacity: 0.85;
  transform: translateX(-50%) scale(0.9);
  animation: float-up linear forwards;
}

.sky-lantern::before {
  /* miệng lồng */
  content: "";
  position: absolute;
  bottom: 3px;
  left: 50%;
  width: 18px;
  height: 8px;
  transform: translateX(-50%);
  border-radius: 6px;
  background: radial-gradient(circle at 50% 50%, rgba(255,210,120,0.9), rgba(120,40,10,0.9));
}

.sky-lantern::after {
  /* ngọn lửa nhỏ */
  content: "";
  position: absolute;
  bottom: 8px;
  left: 50%;
  width: 8px;
  height: 12px;
  transform: translateX(-50%);
  border-radius: 50% 50% 60% 60%;
  background: radial-gradient(circle at 50% 30%, #fff6, #ffc04d 60%, #ff6f00 80%);
  filter: blur(0.3px);
  animation: flame 0.8s ease-in-out infinite;
}

@keyframes flame {
  0%,100% { transform: translateX(-50%) scale(1);   opacity: 0.95; }
  50%     { transform: translateX(-50%) scale(1.08); opacity: 0.8; }
}

@keyframes float-up {
  to {
    transform: translate(-50%, -120vh) scale(1.05);
    opacity: 0.0;
  }
}


